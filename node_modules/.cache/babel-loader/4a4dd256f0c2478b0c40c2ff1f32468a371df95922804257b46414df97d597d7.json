{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport Localbase from 'localbase';\nlet db = new Localbase('db');\ndb.config.debug = false;\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    appTitle: process.env.VUE_APP_TITLE,\n    search: null,\n    tasks: [\n      // {\n      //   id: 1,\n      //   title: 'Wake up',\n      //   done: false,\n      //   dueDate: '2020-10-16'\n      // },\n      // {\n      //   id: 2,\n      //   title: 'Get bananas',\n      //   done: false,\n      //   dueDate: '2020-10-17'\n      // },\n      // {\n      //   id: 3,\n      //   title: 'Eat bananas',\n      //   done: false,\n      //   dueDate: null\n      // }\n    ],\n    snackbar: {\n      show: false,\n      text: ''\n    },\n    sorting: false\n  },\n  mutations: {\n    setSearch(state, value) {\n      state.search = value;\n    },\n    addTask(state, newTask) {\n      state.tasks.push(newTask);\n    },\n    doneTask(state, id) {\n      let task = state.tasks.filter(task => task.id === id)[0];\n      task.done = !task.done;\n    },\n    deleteTask(state, id) {\n      state.tasks = state.tasks.filter(task => task.id !== id);\n    },\n    updateTaskTitle(state, payload) {\n      let task = state.tasks.filter(task => task.id === payload.id)[0];\n      task.title = payload.title;\n    },\n    updateTaskDueDate(state, payload) {\n      let task = state.tasks.filter(task => task.id === payload.id)[0];\n      task.dueDate = payload.dueDate;\n    },\n    setTasks(state, tasks) {\n      state.tasks = tasks;\n    },\n    showSnackbar(state, text) {\n      let timeout = 0;\n      if (state.snackbar.show) {\n        state.snackbar.show = false;\n        timeout = 300;\n      }\n      setTimeout(() => {\n        state.snackbar.show = true;\n        state.snackbar.text = text;\n      }, timeout);\n    },\n    hideSnackbar(state) {\n      state.snackbar.show = false;\n    },\n    toggleSorting(state) {\n      state.sorting = !state.sorting;\n    }\n  },\n  actions: {\n    addTask({\n      commit\n    }, newTaskTitle) {\n      let newTask = {\n        id: Date.now(),\n        title: newTaskTitle,\n        done: false,\n        dueDate: null\n      };\n      db.collection('tasks').add(newTask).then(() => {\n        commit('addTask', newTask);\n        commit('showSnackbar', 'Task added!');\n      });\n    },\n    doneTask({\n      state,\n      commit\n    }, id) {\n      let task = state.tasks.filter(task => task.id === id)[0];\n      db.collection('tasks').doc({\n        id: id\n      }).update({\n        done: !task.done\n      }).then(() => {\n        commit('doneTask', id);\n      });\n    },\n    deleteTask({\n      commit\n    }, id) {\n      db.collection('tasks').doc({\n        id: id\n      }).delete().then(() => {\n        commit('deleteTask', id);\n        commit('showSnackbar', 'Task deleted!');\n      });\n    },\n    updateTaskTitle({\n      commit\n    }, payload) {\n      db.collection('tasks').doc({\n        id: payload.id\n      }).update({\n        title: payload.title\n      }).then(() => {\n        commit('updateTaskTitle', payload);\n        commit('showSnackbar', 'Task updated!');\n      });\n    },\n    updateTaskDueDate({\n      commit\n    }, payload) {\n      db.collection('tasks').doc({\n        id: payload.id\n      }).update({\n        dueDate: payload.dueDate\n      }).then(() => {\n        commit('updateTaskDueDate', payload);\n        commit('showSnackbar', 'Due Date Updated!');\n      });\n    },\n    setTasks({\n      commit\n    }, tasks) {\n      db.collection('tasks').set(tasks);\n      commit('setTasks', tasks);\n    },\n    getTasks({\n      commit\n    }) {\n      db.collection('tasks').get().then(tasks => {\n        commit('setTasks', tasks);\n      });\n    }\n  },\n  getters: {\n    tasksFiltered(state) {\n      if (!state.search) {\n        return state.tasks;\n      }\n      return state.tasks.filter(task => task.title.toLowerCase().includes(state.search.toLowerCase()));\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","Localbase","db","config","debug","use","Store","state","appTitle","process","env","VUE_APP_TITLE","search","tasks","snackbar","show","text","sorting","mutations","setSearch","value","addTask","newTask","push","doneTask","id","task","filter","done","deleteTask","updateTaskTitle","payload","title","updateTaskDueDate","dueDate","setTasks","showSnackbar","timeout","setTimeout","hideSnackbar","toggleSorting","actions","commit","newTaskTitle","Date","now","collection","add","then","doc","update","delete","set","getTasks","get","getters","tasksFiltered","toLowerCase","includes"],"sources":["/Users/olfaslimen/Documents/DEV/todovuetify/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport Localbase from 'localbase'\n\nlet db = new Localbase('db')\ndb.config.debug = false\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    appTitle: process.env.VUE_APP_TITLE,\n    search: null,\n    tasks: [\n      // {\n      //   id: 1,\n      //   title: 'Wake up',\n      //   done: false,\n      //   dueDate: '2020-10-16'\n      // },\n      // {\n      //   id: 2,\n      //   title: 'Get bananas',\n      //   done: false,\n      //   dueDate: '2020-10-17'\n      // },\n      // {\n      //   id: 3,\n      //   title: 'Eat bananas',\n      //   done: false,\n      //   dueDate: null\n      // }\n    ],\n    snackbar: {\n      show: false,\n      text: ''\n    },\n    sorting: false\n  },\n  mutations: {\n    setSearch(state, value) {\n      state.search = value\n    },\n\n    addTask(state, newTask) {\n      state.tasks.push(newTask)\n    },\n    doneTask(state, id) {\n      let task = state.tasks.filter(task => task.id === id)[0]\n      task.done = !task.done\n    },\n    deleteTask(state, id) {\n      state.tasks = state.tasks.filter(task => task.id !== id)\n    },\n    updateTaskTitle(state, payload) {\n      let task = state.tasks.filter(task => task.id === payload.id)[0]\n      task.title = payload.title\n    },\n    updateTaskDueDate(state, payload) {\n      let task = state.tasks.filter(task => task.id === payload.id)[0]\n      task.dueDate = payload.dueDate\n    },\n    setTasks(state, tasks) {\n      state.tasks = tasks\n    },\n\n    showSnackbar(state, text) {\n      let timeout = 0\n      if (state.snackbar.show) {\n        state.snackbar.show = false\n        timeout = 300\n      }\n      setTimeout(() => {\n        state.snackbar.show = true\n        state.snackbar.text = text\n      }, timeout)\n    },\n    hideSnackbar(state) {\n      state.snackbar.show = false\n    },\n\n    toggleSorting(state) {\n      state.sorting = !state.sorting\n    }\n  },\n  actions: {\n    addTask({ commit }, newTaskTitle) {\n      let newTask = {\n        id: Date.now(),\n        title: newTaskTitle,\n        done: false,\n        dueDate: null\n      }\n      db.collection('tasks').add(newTask).then(() => {\n        commit('addTask', newTask)\n        commit('showSnackbar', 'Task added!')\n      })\n    },\n    doneTask({ state, commit }, id) {\n      let task = state.tasks.filter(task => task.id === id)[0]\n      db.collection('tasks').doc({ id: id }).update({\n        done: !task.done\n      }).then(() => {\n        commit('doneTask', id)\n      })\n    },\n    deleteTask({ commit }, id) {\n      db.collection('tasks').doc({ id: id }).delete().then(() => {\n        commit('deleteTask', id)\n        commit('showSnackbar', 'Task deleted!')\n      })\n    },\n    updateTaskTitle({ commit }, payload) {\n      db.collection('tasks').doc({ id: payload.id }).update({\n        title: payload.title\n      }).then(() => {\n        commit('updateTaskTitle', payload)\n        commit('showSnackbar', 'Task updated!')\n      })\n    },\n    updateTaskDueDate({ commit }, payload) {\n      db.collection('tasks').doc({ id: payload.id }).update({\n        dueDate: payload.dueDate\n      }).then(() => {\n        commit('updateTaskDueDate', payload)\n        commit('showSnackbar', 'Due Date Updated!')\n      })\n    },\n    setTasks({ commit }, tasks) {\n      db.collection('tasks').set(tasks)\n      commit('setTasks', tasks)\n    },\n    getTasks({ commit }) {\n      db.collection('tasks').get().then(tasks => {\n        commit('setTasks', tasks)\n      })\n    }\n  },\n  getters: {\n    tasksFiltered(state) {\n      if (!state.search) {\n        return state.tasks\n      }\n      return state.tasks.filter(task =>\n        task.title.toLowerCase().includes(state.search.toLowerCase())\n      )\n    }\n  }\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}