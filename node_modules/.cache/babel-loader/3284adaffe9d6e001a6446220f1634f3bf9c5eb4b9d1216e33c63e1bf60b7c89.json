{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Service = void 0;\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nvar Service = /*#__PURE__*/function () {\n  function Service() {\n    _classCallCheck(this, Service);\n    this.framework = {};\n  }\n  _createClass(Service, [{\n    key: \"init\",\n    value: function init(root, ssrContext) {}\n  }]);\n  return Service;\n}();\nexports.Service = Service;","map":{"version":3,"names":["Service","_classCallCheck","framework","init","root","ssrContext"],"sources":["../../../src/services/service/index.ts"],"sourcesContent":["// Contracts\nimport { VuetifyServiceContract } from 'vuetify/types/services/index'\n\n// Types\nimport Vue from 'vue'\n\nexport class Service implements VuetifyServiceContract {\n  framework = {}\n\n  init (root: Vue, ssrContext?: object) {}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAMaA,O;EAAb,SAAAA,QAAA;IAAAC,eAAA,OAAAD,OAAA;IACE,KAAAE,SAAA,GAAY,EAAZ;EAGD;;;WADC,SAAAC,KAAMC,IAAN,EAAiBC,UAAjB,EAAoC,CAAI","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}